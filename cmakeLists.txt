cmake_minimum_required(VERSION 3.12)
project(research_project VERSION 1.0.0)

# flags
# which compiler and compiler version you wish to build your project with.

# files
# specify all the files and club then into sensible variable names like source, include, etc. It is just to ease things out, but if you wish you can totally skip this section and use the file names directly instead of the variables.

# include
# This command is used to specify the path of the include directories that you want the compiler to look into while searching for header files while compiling your code.

# target
# the name of the output file
add_executable(${project} main.cpp)


# external libs
	# linking

	# add_library(
	# 	say-hello STATIC
	# 	# say-hello SHARED
	# 	# say-hello MODULE
	# 	hello.hpp
	# 	hello.cpp
	# )
	# add_subdirectory(./libs/project_name)
	# target_link_libraries(${project} PRIVATE say-hello)

	#Note: By convention, library files are name with ‘lib’ as a prefix or a suffix.
